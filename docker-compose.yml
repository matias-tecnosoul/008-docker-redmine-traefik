services:
  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.file.filename=/etc/traefik/dynamic.yml"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/dynamic.yml:/etc/traefik/dynamic.yml:ro
      - ./traefik/certs:/etc/ssl/traefik:ro
    networks:
      - traefik-net
      - backend 
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.dashboard.entrypoints=web"
      - "traefik.http.routers.dashboard.service=api@internal"

  db:
    image: postgres:13
    environment:
      POSTGRES_DB: redmine
      POSTGRES_USER: redmine
      POSTGRES_PASSWORD: redmine_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U redmine"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Primera instancia - Ejecuta migraciones
  redmine-1:
    image: redmine:5.0
    environment:
      REDMINE_DB_POSTGRES: db
      REDMINE_DB_DATABASE: redmine
      REDMINE_DB_USERNAME: redmine
      REDMINE_DB_PASSWORD: redmine_password
      REDMINE_SECRET_KEY_BASE: supersecretkey123456789abcdefghijklmnop
    volumes:
      - redmine_files:/usr/src/redmine/files
      - redmine_plugins:/usr/src/redmine/plugins
      - redmine_config:/usr/src/redmine/config  # ✅ Volumen compartido para config
    networks:
      - backend
      - traefik-net
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --timeout=5 --spider http://localhost:3000/login || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 120s  
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.redmine.rule=Host(`redmine.localhost`)"
      - "traefik.http.routers.redmine.entrypoints=websecure"
      - "traefik.http.routers.redmine.tls=true"
      - "traefik.http.services.redmine.loadbalancer.server.port=3000"
      - "traefik.http.services.redmine.loadbalancer.sticky.cookie=true"
      - "traefik.http.services.redmine.loadbalancer.sticky.cookie.name=redmine_session"
      - "traefik.http.services.redmine.loadbalancer.healthcheck.path=/"
      - "traefik.http.services.redmine.loadbalancer.healthcheck.interval=30s"
      - "traefik.docker.network=traefik-net"  # ✅ Forzar uso de traefik-net

  # Segunda instancia - No ejecuta migraciones
  redmine-2:
    image: redmine:5.0
    environment:
      REDMINE_DB_POSTGRES: db
      REDMINE_DB_DATABASE: redmine
      REDMINE_DB_USERNAME: redmine
      REDMINE_DB_PASSWORD: redmine_password
      REDMINE_SECRET_KEY_BASE: supersecretkey123456789abcdefghijklmnop
      REDMINE_SKIP_DB_MIGRATE: "true"  # Skip migrations
    volumes:
      - redmine_files:/usr/src/redmine/files
      - redmine_plugins:/usr/src/redmine/plugins
      - redmine_config:/usr/src/redmine/config  # ✅ Volumen compartido para config
    networks:
      - backend
      - traefik-net
    depends_on:
      redmine-1:
        condition: service_healthy  # Cambiar de started a healthy
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --timeout=5 --spider http://localhost:3000/login || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 10
      start_period: 60s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.redmine.rule=Host(`redmine.localhost`)"
      - "traefik.http.routers.redmine.entrypoints=websecure"
      - "traefik.http.routers.redmine.tls=true"
      - "traefik.http.services.redmine.loadbalancer.server.port=3000"
      - "traefik.http.services.redmine.loadbalancer.sticky.cookie=true"
      - "traefik.http.services.redmine.loadbalancer.sticky.cookie.name=redmine_session"
      - "traefik.http.services.redmine.loadbalancer.healthcheck.path=/"
      - "traefik.http.services.redmine.loadbalancer.healthcheck.interval=30s"
      - "traefik.docker.network=traefik-net"  # ✅ Forzar uso de traefik-net

  # Tercera instancia - No ejecuta migraciones
  redmine-3:
    image: redmine:5.0
    environment:
      REDMINE_DB_POSTGRES: db
      REDMINE_DB_DATABASE: redmine
      REDMINE_DB_USERNAME: redmine
      REDMINE_DB_PASSWORD: redmine_password
      REDMINE_SECRET_KEY_BASE: supersecretkey123456789abcdefghijklmnop
      REDMINE_SKIP_DB_MIGRATE: "true"  # Skip migrations
    volumes:
      - redmine_files:/usr/src/redmine/files
      - redmine_plugins:/usr/src/redmine/plugins
      - redmine_config:/usr/src/redmine/config  # ✅ Volumen compartido para config
    networks:
      - backend
      - traefik-net
    depends_on:
      redmine-1:
        condition: service_healthy  # Cambiar de started a healthy
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --timeout=5 --spider http://localhost:3000/login || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 10
      start_period: 60s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.redmine.rule=Host(`redmine.localhost`)"
      - "traefik.http.routers.redmine.entrypoints=websecure"
      - "traefik.http.routers.redmine.tls=true"
      - "traefik.http.services.redmine.loadbalancer.server.port=3000"
      - "traefik.http.services.redmine.loadbalancer.sticky.cookie=true"
      - "traefik.http.services.redmine.loadbalancer.sticky.cookie.name=redmine_session"
      - "traefik.http.services.redmine.loadbalancer.healthcheck.path=/"
      - "traefik.http.services.redmine.loadbalancer.healthcheck.interval=30s"
      - "traefik.docker.network=traefik-net"  # ✅ Forzar uso de traefik-net

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_LISTEN_PORT: 80
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - backend
      - traefik-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.localhost`)"
      - "traefik.http.routers.pgadmin.entrypoints=websecure"
      - "traefik.http.routers.pgadmin.tls=true"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"

  maildev:
    image: maildev/maildev
    networks:
      - backend
      - traefik-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.maildev.rule=Host(`maildev.localhost`)"
      - "traefik.http.routers.maildev.entrypoints=websecure"
      - "traefik.http.routers.maildev.tls=true"
      - "traefik.http.services.maildev.loadbalancer.server.port=1080"

volumes:
  postgres_data:
  redmine_files:
  redmine_plugins:
  redmine_config:  # ✅ Nuevo volumen para configuración
  pgadmin_data:

networks:
  traefik-net:
    driver: bridge
  backend:
    driver: bridge